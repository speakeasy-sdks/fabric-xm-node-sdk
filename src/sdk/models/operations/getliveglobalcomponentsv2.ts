/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Type } from "class-transformer";

export class GetLiveGlobalComponentsV2QueryParams extends SpeakeasyBase {
  /**
   * A comma-separated list of channel ids
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channels",
  })
  channels?: string;
}

export class GetLiveGlobalComponentsV2Headers extends SpeakeasyBase {
  /**
   * The `x-site-context` header is a JSON object that must contain your account ID. This header can also be called `X-Site-Context` based on your stylistic preferences.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-site-context",
  })
  xSiteContext?: shared.XSiteContext;
}

export class GetLiveGlobalComponentsV2Request extends SpeakeasyBase {
  @SpeakeasyMetadata()
  queryParams: GetLiveGlobalComponentsV2QueryParams;

  @SpeakeasyMetadata()
  headers: GetLiveGlobalComponentsV2Headers;
}

export class GetLiveGlobalComponentsV2Response extends SpeakeasyBase {
  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  components?: Record<string, any>[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The request was received but an internal error occurred
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
